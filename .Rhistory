# Convert bibliographic data from .bib format to a data frame
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Rename the author column (if necessary)
#colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Perform a bibliometric analysis
result <- biblioAnalysis(data)
# Display a summary of the results
summary(result)
# Generate plots of the bibliometric analysis
plot(x = result)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 4,
clust = 5, stemming = FALSE, labelsize = 10, documents = 10)
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL,
n = 60, Title = "Author Co-Citation Network",
type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.7)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL,
n = 45, Title = "Keyword Co-Occurrences",
type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.7)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(bibliometrix)
library(rprojroot)
# Chunk 3
setwd(find_rstudio_root_file())
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Chunk 4
# Set the working directory to locate files
setwd(find_rstudio_root_file())
# Convert bibliographic data from .bib format to a data frame
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Chunk 5
# Perform a bibliometric analysis
result <- biblioAnalysis(data)
# Display a summary of the results
summary(result)
# Chunk 6
# Generate plots of the bibliometric analysis
plot(x = result)
# Chunk 7
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 4,
clust = 5, stemming = FALSE, labelsize = 10, documents = 10)
# Chunk 8
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL,
n = 60, Title = "Author Co-Citation Network",
type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.7)
# Chunk 9
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL,
n = 45, Title = "Keyword Co-Occurrences",
type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.7)
knitr::opts_chunk$set(echo = TRUE)
library(bibliometrix)
library(rprojroot)
setwd(find_rstudio_root_file())
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Set the working directory to locate files
setwd(find_rstudio_root_file())
# Convert bibliographic data from .bib format to a data frame
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Perform a bibliometric analysis
result <- biblioAnalysis(data)
# Display a summary of the results
summary(result)
# Generate plots of the bibliometric analysis
plot(x = result)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 4,
clust = 5, stemming = FALSE, labelsize = 10, documents = 10)
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL,
n = 60, Title = "Author Co-Citation Network",
type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.7)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL,
n = 45, Title = "Keyword Co-Occurrences",
type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.7)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 4, clust = 5, stemming = FALSE, labelsize = 10, documents = 60)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 2, clust = 5, stemming = FALSE, labelsize = 10, documents = 60)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 2, clust = 5, stemming = FALSE, labelsize = 10, documents = 60)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 5, stemming = TRUE, labelsize = 10, documents = 60)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 2, clust = 5, stemming = TRUE, labelsize = 10, documents = 60)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 2, clust = 4, stemming = TRUE, labelsize = 10, documents = 60)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 1, clust = 4, stemming = FALSE, labelsize = 10, documents = 60)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 1, clust = 5, stemming = FALSE, labelsize = 10, documents = 60)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 2, clust = 4, stemming = FALSE, labelsize = 10, documents = 60)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = 60)
lon(data)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
# Generate plots of the bibliometric analysis
plot(x = result)
# Generate plots of the bibliometric analysis
plot(x = result)
# Generate plots of the bibliometric analysis
plot(x = result)
# Generate plots of the bibliometric analysis
plot(x = result)
# Generate plots of the bibliometric analysis
plot(x = result)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL, n = 60, Title = "Author Co-Citation Network", type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.7)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = 45, Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.7)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = 45, Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 1)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = 45, Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 1, labelsize = 1)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = 45, Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 10, labelsize = 1)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = 45, Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 1)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = 45, Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 2.5, labelsize = 1)
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL, n = nrow(data), Title = "Author Co-Citation Network", type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 1)
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL, n = nrow(data), Title = "Author Co-Citation Network", type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.7)
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL, n = nrow(data), Title = "Author Co-Citation Network", type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.8)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = nrow(data), Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 2.5, labelsize = 1)
knitr::opts_chunk$set(echo = TRUE)
library(bibliometrix)
library(rprojroot)
setwd(find_rstudio_root_file())
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Set the working directory to locate files
setwd(find_rstudio_root_file())
# Convert bibliographic data from .bib format to a data frame
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Perform a bibliometric analysis
result <- biblioAnalysis(data)
# Display a summary of the results
summary(result)
# Generate plots of the bibliometric analysis
plot(x = result)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL, n = nrow(data), Title = "Author Co-Citation Network", type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.8)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = nrow(data), Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 2.5, labelsize = 1)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(bibliometrix)
library(rprojroot)
# Chunk 3
setwd(find_rstudio_root_file())
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Chunk 4
# Set the working directory to locate files
setwd(find_rstudio_root_file())
# Convert bibliographic data from .bib format to a data frame
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Chunk 5
# Perform a bibliometric analysis
result <- biblioAnalysis(data)
# Display a summary of the results
summary(result)
# Chunk 6
# Generate plots of the bibliometric analysis
plot(x = result)
# Chunk 7
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
# Chunk 8
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL, n = nrow(data), Title = "Author Co-Citation Network", type = "fruchterman", size = TRUE, edgesize = 5, labelsize = 0.8)
# Chunk 9
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = nrow(data), Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 2.5, labelsize = 1)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = nrow(data), Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 2.5, labelsize = 0.5)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = nrow(data), Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 2.5, labelsize = 1)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
knitr::opts_chunk$set(echo = TRUE)
library(bibliometrix)
library(rprojroot)
setwd(find_rstudio_root_file())
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Set the working directory to locate files
setwd(find_rstudio_root_file())
# Convert bibliographic data from .bib format to a data frame
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Perform a bibliometric analysis
result <- biblioAnalysis(data)
# Display a summary of the results
summary(result)
# Generate plots of the bibliometric analysis
plot(x = result)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL, n = nrow(data), Title = "Author Co-Citation Network", type = "fruchterman", size = TRUE, edgesize = 2.5, labelsize = 1)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = nrow(data), Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 2.5, labelsize = 1)
output_dir <- "plots/"
dir.create(output_dir)
CS_list <- list(CS)
for (i in 1:length(CS_list)) {
plot_filename <- paste0(output_dir, "conceptual_structure_plot_",i,".tiff")
tiff(filename = plot_filename,
width = 6, height = 6, units = "in", res = 300)
}
output_dir <- "figures/"
dir.create(output_dir)
CS_list <- list(CS)
for (i in 1:length(CS_list)) {
plot_filename <- paste0(output_dir, "conceptual_structure_plot_",i,".tiff")
tiff(filename = plot_filename,
width = 6, height = 6, units = "in", res = 300)
}
output_dir <- "figures/"
dir.create(output_dir)
CS_list <- list(CS)
for (i in 1:length(CS_list)) {
plot_filename <- paste0(output_dir, "conceptual_structure_plot_",i,".tiff")
tiff(filename = plot_filename,
width = 6, height = 6, units = "in", res = 300)
plot(x = plot_list[[i]])
}
output_dir <- "figures/"
dir.create(output_dir)
CS_list <- list(CS)
for (i in 1:length(CS_list)) {
plot_filename <- paste0(output_dir, "conceptual_structure_plot_",i,".tiff")
tiff(filename = plot_filename,
width = 6, height = 6, units = "in", res = 300)
plot(x = CS_list[[i]])
}
output_dir <- "figures/"
dir.create(output_dir)
CS_list <- list(CS)
for (i in 1:length(CS_list)) {
plot_filename <- paste0(output_dir, "conceptual_structure_plot_",i,".tiff")
tiff(filename = plot_filename,
width = 6, height = 6, units = "in", res = 300)
plot(x = CS_list[[i]])
}
output_dir <- "figures/"
dir.create(output_dir)
CS_list <- list(CS)
for (i in 1:length(CS_list)) {
plot_filename <- paste0(output_dir, "conceptual_structure_plot_",i,".tiff")
tiff(filename = plot_filename,
width = 12, height = 6, units = "in", res = 300)
CS <- conceptualStructure(data, field = "ID", method = "CA",
minDegree = 3, clust = 4, stemming = FALSE,
labelsize = 10, documents = nrow(data))
}
find_rstudio_root_file()
CS_list <- list(CS)
for (i in 1:length(CS_list)) {
plot_filename <- paste0(root_file, "figures/conceptual_structure_plot_",i,".tiff")
tiff(filename = plot_filename,
width = 12, height = 6, units = "in", res = 300)
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
}
root_file <- find_rstudio_root_file()
setwd(root_file)
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
CS_list <- list(CS)
for (i in 1:length(CS_list)) {
plot_filename <- paste0(root_file, "figures/conceptual_structure_plot_",i,".tiff")
tiff(filename = plot_filename,
width = 12, height = 6, units = "in", res = 300)
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
}
CS_list <- list(CS)
for (i in 1:length(CS_list)) {
plot_filename <- paste0(root_file, "/figures/conceptual_structure_plot_",i,".tiff")
tiff(filename = plot_filename,
width = 12, height = 6, units = "in", res = 300)
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
}
CS_list <- list(CS)
for (i in 1:length(CS_list)) {
plot_filename <- paste0(root_file, "/figures/conceptual_structure_plot_",i,".tiff")
tiff(filename = plot_filename, width = 12, height = 6, units = "in", res = 300)
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
dev.off()
}
output_dir <- paste0(root_file, "/figures/")
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
CS <- conceptualStructure(data, field = "ID", method = "CA",
minDegree = 3, clust = 4, stemming = FALSE,
labelsize = 10, documents = nrow(data))
for (i in 1:length(CS$plots)) {
plot_filename <- paste0(output_dir, "conceptual_structure_plot_", i, ".tiff")
tiff(filename = plot_filename, width = 12, height = 6, units = "in", res = 300)
plot(CS$plots[[i]])
dev.off()
}
output_dir <- paste0(root_file, "/figures/")
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
for (i in 1:length(CS$plots)) {
plot_filename <- paste0(output_dir, "conceptual_structure_plot_", i, ".tiff")
tiff(filename = plot_filename, width = 12, height = 6, units = "in", res = 300)
plot(CS$plots[[i]])
dev.off()
}
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
output_dir <- paste0(root_file, "/figures/")
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
for (i in 1:length(CS$plots)) {
plot_filename <- paste0(output_dir, "conceptual_structure_plot_", i, ".tiff")
tiff(filename = plot_filename, width = 12, height = 6, units = "in", res = 300)
plot(CS$plots[[i]])
dev.off()
}
CS$plot[[1]]
CS$plot[[2]]
output_dir <- paste0(root_file, "/figures/")
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
CS <- conceptualStructure(data, field = "ID", method = "CA",
minDegree = 3, clust = 4, stemming = FALSE,
labelsize = 10, documents = nrow(data))
# Verifica que 'CS' contiene gráficos
str(CS)
for (i in 1:length(CS$plots)) {  # Asegúrate de que 'CS$plots' es una lista de gráficos
plot_filename <- paste0(output_dir, "conceptual_structure_plot_", i, ".tiff")
tiff(filename = plot_filename, width = 12, height = 6, units = "in", res = 300)
plot(CS$plots[[i]])
dev.off()
}
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
knitr::opts_chunk$set(echo = TRUE)
library(bibliometrix)
library(rprojroot)
root_file <- find_rstudio_root_file()
setwd(root_file)
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Set the working directory to locate files
setwd(find_rstudio_root_file())
# Convert bibliographic data from .bib format to a data frame
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Perform a bibliometric analysis
result <- biblioAnalysis(data)
# Display a summary of the results
summary(result)
# Generate plots of the bibliometric analysis
plot(x = result)
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
# Rename the author column (if necessary)
colnames(data)[colnames(data) == "AU"] <- "CR_AU"
# Create a network matrix for author co-citation
NetMatrix_citation_cc <- biblioNetwork(data, analysis = "co-citation", network = "authors", sep = ";")
# Plot the author co-citation network
co_citation = networkPlot(NetMatrix_citation_cc, normalize = "association", weighted = NULL, n = nrow(data), Title = "Author Co-Citation Network", type = "fruchterman", size = TRUE, edgesize = 2.5, labelsize = 1)
# Create a network matrix for keyword co-occurrences
NetMatrix_keyword_co <- biblioNetwork(data, analysis = "co-occurrences", network = "keywords", sep = ";")
# Plot the keyword co-occurrence network
keyword_co = networkPlot(NetMatrix_keyword_co, normalize = "association", weighted = NULL, n = nrow(data), Title = "Keyword Co-Occurrences", type = "fruchterman", size = TRUE, edgesize = 2.5, labelsize = 1)
# Definir el directorio de salida
output_dir <- paste0(root_file, "/figures/")
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# Guardar cada uno de los gráficos generados por plot(x = result)
for (i in 1:5) {  # Asumiendo que 'result' genera 5 gráficos
plot_filename <- paste0(output_dir, "bibliometric_plot_", i, ".tiff")
# Abrir un dispositivo gráfico TIFF
tiff(filename = plot_filename, width = 12, height = 6, units = "in", res = 300)
# Llamar a la función de plot para generar el gráfico
plot(x = result, which = i)  # 'which' selecciona qué gráfico de 'result' quieres
# Cerrar el dispositivo gráfico y guardar el gráfico
dev.off()
}
str(result)
output_dir <- paste0(root_file, "/figures/")
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# Guardar cada uno de los 5 gráficos generados por plot(x = result)
for (i in 1:5) {  # Asumiendo que 'result' genera 5 gráficos
plot_filename <- paste0(output_dir, "bibliometric_plot_", i, ".tiff")
# Abrir un dispositivo gráfico TIFF
tiff(filename = plot_filename, width = 12, height = 6, units = "in", res = 300)
# Llamar a la función de plot para generar el gráfico
plot(x = result, which = i)  # 'which' selecciona qué gráfico de 'result' quieres
# Cerrar el dispositivo gráfico y guardar el gráfico
dev.off()
}
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(bibliometrix)
library(rprojroot)
# Chunk 3
root_file <- find_rstudio_root_file()
setwd(root_file)
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Chunk 4
# Set the working directory to locate files
setwd(find_rstudio_root_file())
# Convert bibliographic data from .bib format to a data frame
data <- convert2df("data/database1.bib", dbsource = "scopus", format = "bibtex")
# Chunk 5
# Perform a bibliometric analysis
result <- biblioAnalysis(data)
# Display a summary of the results
summary(result)
# Chunk 6
# Generate plots of the bibliometric analysis
plot(x = result)
# Chunk 7
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
# Perform conceptual structure analysis using keywords
CS <- conceptualStructure(data, field = "ID", method = "CA", minDegree = 3, clust = 4, stemming = FALSE, labelsize = 10, documents = nrow(data))
